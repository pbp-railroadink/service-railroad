[{"filePath":"/Users/koellem/src/github.com/mkoelle/service-railroad/.eslintrc.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"/Users/koellem/src/github.com/mkoelle/service-railroad/coverage/lcov-report/block-navigation.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"/Users/koellem/src/github.com/mkoelle/service-railroad/coverage/lcov-report/prettify.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"/Users/koellem/src/github.com/mkoelle/service-railroad/coverage/lcov-report/sorter.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"/Users/koellem/src/github.com/mkoelle/service-railroad/jest.config.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"/Users/koellem/src/github.com/mkoelle/service-railroad/src/hello.ts","messages":[{"ruleId":"no-multi-spaces","severity":2,"message":"Multiple spaces found before 'const'.","line":4,"column":7,"nodeType":"Keyword","messageId":"multipleSpaces","endLine":4,"endColumn":24,"fix":{"range":[96,113],"text":" "}},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_context' is defined but never used.","line":4,"column":78,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":86},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":12,"column":2,"nodeType":"VariableDeclaration","messageId":"missingSemi","endLine":13,"endColumn":1,"fix":{"range":[380,380],"text":";"}}],"errorCount":2,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import {APIGatewayProxyHandler} from 'aws-lambda';\nimport 'source-map-support/register';\n\nexport                 const handler: APIGatewayProxyHandler = async (event, _context) => {\n  return {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Go Serverless Webpack (Typescript) v1.0! Your function executed successfully!',\n      input: event,\n    }, null, 2),\n  };\n}\n","usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"/Users/koellem/src/github.com/mkoelle/service-railroad/tests/feature/steps/hello.spec.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"/Users/koellem/src/github.com/mkoelle/service-railroad/tests/unit/hello.test.ts","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]},{"filePath":"/Users/koellem/src/github.com/mkoelle/service-railroad/webpack.config.js","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ForkTsCheckerWebpackPlugin' is assigned a value but never used.","line":5,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":33}],"errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/* eslint-disable @typescript-eslint/no-var-requires */\nconst path = require('path');\nconst slsw = require('serverless-webpack');\nconst nodeExternals = require('webpack-node-externals');\nconst ForkTsCheckerWebpackPlugin = require('fork-ts-checker-webpack-plugin');\n\nmodule.exports = {\n  context: __dirname,\n  mode: slsw.lib.webpack.isLocal ? 'development' : 'production',\n  entry: slsw.lib.entries,\n  devtool: slsw.lib.webpack.isLocal ? 'cheap-module-eval-source-map' : 'source-map',\n  resolve: {\n    extensions: ['.mjs', '.json', '.ts'],\n    symlinks: false,\n    cacheWithContext: false,\n    alias: {\n      '@src': path.resolve(__dirname, './src'),\n    },\n  },\n  output: {\n    libraryTarget: 'commonjs',\n    path: path.join(__dirname, '.webpack'),\n    filename: '[name].js',\n  },\n  target: 'node',\n  externals: [nodeExternals()],\n  module: {\n    rules: [\n      // all files with a `.ts` or `.tsx` extension will be handled by `ts-loader`\n      {\n        test: /\\.(tsx?)$/,\n        loader: 'ts-loader',\n        exclude: [\n          [\n            path.resolve(__dirname, 'node_modules'),\n            path.resolve(__dirname, '.serverless'),\n            path.resolve(__dirname, '.webpack'),\n          ],\n        ],\n        options: {\n          transpileOnly: true,\n          experimentalWatchApi: true,\n        },\n      },\n    ],\n  },\n  plugins: [\n    // new ForkTsCheckerWebpackPlugin({\n    //   eslint: true,\n    //   eslintOptions: {\n    //     cache: true\n    //   }\n    // })\n  ],\n};\n","usedDeprecatedRules":[{"ruleId":"valid-jsdoc","replacedBy":[]},{"ruleId":"require-jsdoc","replacedBy":[]}]}]